---
interface Props {
	name: string;
	publisher: string;
	grades: number[];
	currentGrade?: number;
}

const { name, publisher, grades, currentGrade } = Astro.props;

const publisherColors = {
	'Gyldendal': 'bg-blue-100 text-blue-800',
	'Alinea': 'bg-green-100 text-green-800',
	'default': 'bg-gray-100 text-gray-800'
};

const publisherColor = publisherColors[publisher] || publisherColors.default;
---

<div class="bg-white rounded-lg shadow-sm hover:shadow-md transition-all p-6 border border-gray-100" data-platform-card>
	<div class="flex justify-between items-start mb-4">
		<h3 class="text-lg font-semibold text-gray-900">{name}</h3>
		{publisher && (
			<span class={`px-2 py-1 text-sm font-medium rounded-full ${publisherColor}`} data-publisher={publisher}>
				{publisher}
			</span>
		)}
	</div>
	
	{grades.length > 0 && (
		<div class="flex flex-wrap gap-2 mt-3">
			{grades.map((grade) => (
				<span class={`px-2 py-1 text-xs rounded-full ${
					currentGrade === grade 
						? 'bg-indigo-100 text-indigo-800 font-medium' 
						: 'bg-gray-100 text-gray-600'
				}`}>
					{grade}. Ã¥rgang
				</span>
			))}
		</div>
	)}
</div>