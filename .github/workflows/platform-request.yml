name: Process New Platform Request

on:
  issues:
    types: [opened]

jobs:
  debug-trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Event
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Action: ${{ github.event.action }}"
          echo "Issue creator: ${{ github.event.issue.user.login }}"
          echo "Issue labels: ${{ toJSON(github.event.issue.labels) }}"
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body preview: ${GITHUB_EVENT_PATH}"
          echo "Full context:"
          echo "$GITHUB_CONTEXT"

  check-conditions:
    needs: debug-trigger
    runs-on: ubuntu-latest
    steps:
      - name: Check Username
        run: |
          echo "Expected username: edbpede"
          echo "Actual username: ${{ github.event.issue.user.login }}"
          echo "Username matches: ${{ github.event.issue.user.login == 'edbpede' }}"

      - name: Check Labels
        run: |
          echo "Labels on issue:"
          echo "${{ toJSON(github.event.issue.labels) }}"
          echo "Has platform-request label: ${{ contains(github.event.issue.labels.*.name, 'platform-request') }}"

  create-platform:
    needs: check-conditions
    if: |
      github.event.issue.user.login == 'edbpede' &&
      contains(github.event.issue.labels.*.name, 'platform-request')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Debug Event Info
        run: |
          echo "Issue Creator: ${{ github.event.issue.user.login }}"
          echo "Issue Labels: ${{ toJSON(github.event.issue.labels.*.name) }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Number: ${{ github.event.issue.number }}"

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse Issue Form
        id: parse-issue
        uses: actions/github-script@v7
        with:
          script: |
            console.log('Starting to parse issue form...');
            const body = context.payload.issue.body;
            console.log('Issue body:', body);
            
            const lines = body.split('\n');
            
            const getData = (field) => {
              console.log(`Looking for field: ${field}`);
              const line = lines.find(l => l.includes(`### ${field}`));
              if (!line) {
                console.log(`Field not found: ${field}`);
                return '';
              }
              const value = lines[lines.indexOf(line) + 2].trim();
              console.log(`Found value for ${field}:`, value);
              return value;
            };
            
            const getGrades = () => {
              console.log('Parsing grades section...');
              const gradeSection = body.split('### Klassetrin')[1].split('###')[0];
              console.log('Grade section:', gradeSection);
              
              const grades = [];
              gradeSection.split('\n').forEach(line => {
                if (line.includes('[x]')) {
                  const match = line.match(/\((\d+)\)/);
                  if (match) {
                    const grade = parseInt(match[1], 10);
                    console.log(`Found selected grade: ${grade}`);
                    grades.push(grade);
                  }
                }
              });
              console.log('Final grades array:', grades);
              return grades;
            };
            
            console.log('Building platform data object...');
            const platformData = {
              name: getData('Platformnavn'),
              publisher: getData('Udgiver'),
              url: getData('Platform URL'),
              subject: getData('Fag'),
              description: getData('Kort beskrivelse'),
              longDescription: getData('Detaljeret beskrivelse'),
              grades: getGrades(),
              isActive: true
            };
            
            console.log('Platform data:', platformData);
            
            // Sanitize publisher name for directory
            const publisherDir = platformData.publisher
              .toLowerCase()
              .replace(/[^a-z0-9]/g, '-')
              .replace(/-+/g, '-')
              .replace(/^-|-$/g, '');
            
            console.log('Sanitized publisher directory:', publisherDir);
            
            // Create JSON content
            const jsonContent = JSON.stringify(platformData, null, 2);
            
            core.setOutput('publisher-dir', publisherDir);
            core.setOutput('platform-data', jsonContent);
            core.setOutput('platform-name', platformData.name);
            
            console.log('Successfully set all outputs');

      - name: Show Parsed Data
        run: |
          echo "Platform Name: ${{ steps.parse-issue.outputs.platform-name }}"
          echo "Publisher Directory: ${{ steps.parse-issue.outputs.publisher-dir }}"
          echo "Platform Data:"
          echo "${{ steps.parse-issue.outputs.platform-data }}"

      - name: Create Branch
        run: |
          echo "Configuring git..."
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          echo "Creating new branch..."
          git checkout -b platform/add-${{ github.event.issue.number }}
          
          echo "Branch created successfully"

      - name: Create Platform File
        run: |
          echo "Creating directory structure..."
          mkdir -p src/content/platforms/${{ steps.parse-issue.outputs.publisher-dir }}
          
          echo "Writing platform data to file..."
          echo '${{ steps.parse-issue.outputs.platform-data }}' > src/content/platforms/${{ steps.parse-issue.outputs.publisher-dir }}/${{ github.event.issue.number }}.json
          
          echo "Platform file created successfully"
          ls -la src/content/platforms/${{ steps.parse-issue.outputs.publisher-dir }}

      - name: Commit Changes
        run: |
          echo "Adding changes to git..."
          git add .
          
          echo "Committing changes..."
          git commit -m "feat(platform): tilf√∏j ${{ steps.parse-issue.outputs.platform-name }}"
          
          echo "Changes committed successfully"

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "‚ú® Tilf√∏j platform: ${{ steps.parse-issue.outputs.platform-name }}"
          body: |
            ## Ny platform tilf√∏jet

            Denne PR er automatisk genereret fra issue #${{ github.event.issue.number }}.

            ### Platform detaljer
            - **Navn**: ${{ steps.parse-issue.outputs.platform-name }}
            - **Udgiver**: ${{ steps.parse-issue.outputs.publisher-dir }}
            - **Issue**: #${{ github.event.issue.number }}

            ### Tjekliste
            - [ ] Platform data er korrekt formateret
            - [ ] URL er gyldig og tilg√¶ngelig
            - [ ] Klassetrin er korrekte
            - [ ] Fagkategorisering er korrekt

            ### Forh√•ndsvisning
            ```json
            ${{ steps.parse-issue.outputs.platform-data }}
            ```

            Lukker #${{ github.event.issue.number }}
          labels: |
            platform
            automated-pr
          branch: platform/add-${{ github.event.issue.number }}
          commit-message: "feat(platform): tilf√∏j ${{ steps.parse-issue.outputs.platform-name }}"
          delete-branch: true

      - name: Show PR Result
        if: steps.create-pr.outputs.pull-request-number
        run: |
          echo "Pull Request created successfully!"
          echo "PR Number: ${{ steps.create-pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.create-pr.outputs.pull-request-url }}"

      - name: Add Comment to Issue
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Tak for din indsendelse af en ny platform! üéâ
            
            Jeg har oprettet en pull request for at tilf√∏je denne platform. Du kan gennemg√• den her: ${{ steps.create-pr.outputs.pull-request-url }}
            
            PR'en vil automatisk blive lukket, n√•r den er merged.
